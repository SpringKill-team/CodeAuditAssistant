# ?????vuln.name.NettyResponseSplittingRisk=Netty \u54cd\u5e94\u62c6\u5206\u98ce\u9669vuln.name.PatternMatchesDOS=\u6a21\u5f0f\u5339\u914d DOS \u98ce\u9669vuln.name.SystemEXITDOS=\u7cfb\u7edf EXIT DOS \u98ce\u9669vuln.name.ReadFile=\u4efb\u610f\u6587\u4ef6\u8bfb\u53d6\u98ce\u9669vuln.name.CommonIOFileWrite=CommonIO \u6587\u4ef6\u5199\u5165\u98ce\u9669vuln.name.IOFilesWrite=\u4efb\u610f\u6587\u4ef6\u5199\u5165\u98ce\u9669vuln.name.JDBCAttack=JDBC \u653b\u51fb\u98ce\u9669vuln.name.JNDIInjection=JNDI \u6ce8\u5165\u98ce\u9669vuln.name.LDAPUnserialize=LDAP \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.BroadCORSAllowOrigin=\u5bbd\u677e\u7684 CORS \u5141\u8bb8\u6e90\u98ce\u9669vuln.name.HardCodedCredential=\u786c\u7f16\u7801\u51ed\u636e\u98ce\u9669vuln.name.OpenSAML2IgnoreComments=OpenSAML2 \u5ffd\u7565\u6ce8\u91ca\u98ce\u9669vuln.name.BSHRCE=BSH \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.BurlapUnserialize=Burlap \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.CastorUnserialize=Castor \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.CompilableRCE=\u53ef\u7f16\u8bd1\u7684\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.ELRCE=EL \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.ExpressionRCE=\u8868\u8fbe\u5f0f\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.FastjsonAutoType=Fastjson AutoType \u98ce\u9669vuln.name.FastjsonUnserialize=Fastjson \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.GroovyRCE=Groovy \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.HessianUnserialize=Hessian \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.JacksonDatabindDefaultTyping=Jackson Databind \u9ed8\u8ba4\u7c7b\u578b\u98ce\u9669vuln.name.JEXLRCE=JEXL \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.JSchOSRCE=JSch \u64cd\u4f5c\u7cfb\u7edf\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.JsonIOUnserialize=JsonIO \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.JYamlUnserialize=JYaml \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.JythonRCE=Jython \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.KryoUnserialize=Kryo \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.MVELRCE=MVEL \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.NashornScriptEngineRCE=Nashorn \u811a\u672c\u5f15\u64ce\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.ObjectInputStreamUnserialize=ObjectInputStream \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.OGNLInjectionRCE=OGNL \u6ce8\u5165\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.RhinoRCE=Rhino \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.RuntimeRCE=Runtime \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.ScriptEngineRCE=\u811a\u672c\u5f15\u64ce\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.SnakeYamlUnserialize=SnakeYaml \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.SPELRCE=SPEL \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.XMLDecoderUnserialize=XMLDecoder \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.XSLTRCE=XSLT \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.name.XStreamUnserialize=XStream \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.YamlBeansUnserialize=YamlBeans \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.name.JakartaRedirect=Jakarta \u91cd\u5b9a\u5411\u98ce\u9669vuln.name.JavaxRedirect=Javax \u91cd\u5b9a\u5411\u98ce\u9669vuln.name.Reflect=\u53cd\u5c04\u98ce\u9669vuln.name.MybatisAnnotationSQLi=Mybatis \u6ce8\u89e3 SQL \u6ce8\u5165\u98ce\u9669vuln.name.MybatisXmlSQLi=Mybatis XML SQL \u6ce8\u5165\u98ce\u9669vuln.name.PlaceholderStringSQLi=\u5360\u4f4d\u7b26\u5b57\u7b26\u4e32 SQL \u6ce8\u5165\u98ce\u9669vuln.name.PolyadicExpressionSQLi=\u591a\u9879\u8868\u8fbe\u5f0f SQL \u6ce8\u5165\u98ce\u9669vuln.name.SQLi=SQL \u6ce8\u5165\u98ce\u9669vuln.name.ApacheSSRF=Apache SSRF \u98ce\u9669vuln.name.GoogleIOSSRF=Google IO SSRF \u98ce\u9669vuln.name.JavaURLSSRF=Java URL SSRF \u98ce\u9669vuln.name.JsoupSSRF=Jsoup SSRF \u98ce\u9669vuln.name.OkhttpSSRF=Okhttp SSRF \u98ce\u9669vuln.name.SpringSSRF=Spring SSRF \u98ce\u9669vuln.name.URLConnectionSSRF=URL \u8fde\u63a5 SSRF \u98ce\u9669vuln.name.BeetlSSTI=Beetl \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.name.FreemarkeraSSTI=Freemarker \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.name.JinjavaSSTI=Jinjava \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.name.PebbleSSTI=Pebble \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.name.ThymeleafSSTI=Thymeleaf \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.name.ValidationSSTI=Validation \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.name.VelocitySSTI=Velocity \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.name.XXE=XML \u5916\u90e8\u5b9e\u4f53 (XXE) \u98ce\u9669# ???????vuln.massage.NettyResponseSplittingRisk=\u8bf7\u68c0\u67e5 Netty \u54cd\u5e94\u62c6\u5206\u98ce\u9669vuln.massage.PatternMatchesDOS=\u8bf7\u68c0\u67e5\u6a21\u5f0f\u5339\u914d DOS \u98ce\u9669vuln.massage.SystemEXITDOS=\u8bf7\u68c0\u67e5\u7cfb\u7edf EXIT DOS \u98ce\u9669vuln.massage.ReadFile=\u8bf7\u68c0\u67e5\u4efb\u610f\u6587\u4ef6\u8bfb\u53d6\u98ce\u9669vuln.massage.CommonIOFileWrite=\u8bf7\u68c0\u67e5 CommonIO \u6587\u4ef6\u5199\u5165\u98ce\u9669vuln.massage.IOFilesWrite=\u8bf7\u68c0\u67e5\u4efb\u610f\u6587\u4ef6\u5199\u5165\u98ce\u9669vuln.massage.JDBCAttack=\u8bf7\u68c0\u67e5 JDBC \u653b\u51fb\u98ce\u9669vuln.massage.JNDIInjection=\u8bf7\u68c0\u67e5 JNDI \u6ce8\u5165\u98ce\u9669vuln.massage.LDAPUnserialize=\u8bf7\u68c0\u67e5 LDAP \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.BroadCORSAllowOrigin=\u8bf7\u68c0\u67e5\u5bbd\u677e\u7684 CORS \u5141\u8bb8\u6e90\u98ce\u9669vuln.massage.HardCodedCredential=\u8bf7\u68c0\u67e5\u786c\u7f16\u7801\u51ed\u636e\u98ce\u9669vuln.massage.OpenSAML2IgnoreComments=\u8bf7\u68c0\u67e5 OpenSAML2 \u5ffd\u7565\u6ce8\u91ca\u98ce\u9669vuln.massage.BSHRCE=\u8bf7\u68c0\u67e5 BSH \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.BurlapUnserialize=\u8bf7\u68c0\u67e5 Burlap \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.CastorUnserialize=\u8bf7\u68c0\u67e5 Castor \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.CompilableRCE=\u8bf7\u68c0\u67e5\u53ef\u7f16\u8bd1\u7684\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.ELRCE=\u8bf7\u68c0\u67e5 EL \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.ExpressionRCE=\u8bf7\u68c0\u67e5\u8868\u8fbe\u5f0f\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.FastjsonAutoType=\u8bf7\u68c0\u67e5 Fastjson AutoType \u98ce\u9669vuln.massage.FastjsonUnserialize=\u8bf7\u68c0\u67e5 Fastjson \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.GroovyRCE=\u8bf7\u68c0\u67e5 Groovy \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.HessianUnserialize=\u8bf7\u68c0\u67e5 Hessian \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.JacksonDatabindDefaultTyping=\u8bf7\u68c0\u67e5 Jackson Databind \u9ed8\u8ba4\u7c7b\u578b\u98ce\u9669vuln.massage.JEXLRCE=\u8bf7\u68c0\u67e5 JEXL \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.JSchOSRCE=\u8bf7\u68c0\u67e5 JSch \u64cd\u4f5c\u7cfb\u7edf\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.JsonIOUnserialize=\u8bf7\u68c0\u67e5 JsonIO \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.JYamlUnserialize=\u8bf7\u68c0\u67e5 JYaml \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.JythonRCE=\u8bf7\u68c0\u67e5 Jython \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.KryoUnserialize=\u8bf7\u68c0\u67e5 Kryo \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.MVELRCE=\u8bf7\u68c0\u67e5 MVEL \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.NashornScriptEngineRCE=\u8bf7\u68c0\u67e5 Nashorn \u811a\u672c\u5f15\u64ce\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.ObjectInputStreamUnserialize=\u8bf7\u68c0\u67e5 ObjectInputStream \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.OGNLInjectionRCE=\u8bf7\u68c0\u67e5 OGNL \u6ce8\u5165\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.RhinoRCE=\u8bf7\u68c0\u67e5 Rhino \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.RuntimeRCE=\u8bf7\u68c0\u67e5 Runtime \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.ScriptEngineRCE=\u8bf7\u68c0\u67e5\u811a\u672c\u5f15\u64ce\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.SnakeYamlUnserialize=\u8bf7\u68c0\u67e5 SnakeYaml \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.SPELRCE=\u8bf7\u68c0\u67e5 SPEL \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.XMLDecoderUnserialize=\u8bf7\u68c0\u67e5 XMLDecoder \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.XSLTRCE=\u8bf7\u68c0\u67e5 XSLT \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u98ce\u9669vuln.massage.XStreamUnserialize=\u8bf7\u68c0\u67e5 XStream \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.YamlBeansUnserialize=\u8bf7\u68c0\u67e5 YamlBeans \u53cd\u5e8f\u5217\u5316\u98ce\u9669vuln.massage.JakartaRedirect=\u8bf7\u68c0\u67e5 Jakarta \u91cd\u5b9a\u5411\u98ce\u9669vuln.massage.JavaxRedirect=\u8bf7\u68c0\u67e5 Javax \u91cd\u5b9a\u5411\u98ce\u9669vuln.massage.Reflect=\u8bf7\u68c0\u67e5\u53cd\u5c04\u98ce\u9669vuln.massage.MybatisAnnotationSQLi=\u8bf7\u68c0\u67e5 Mybatis \u6ce8\u89e3 SQL \u6ce8\u5165\u98ce\u9669vuln.massage.MybatisXmlSQLi=\u8bf7\u68c0\u67e5 Mybatis XML SQL \u6ce8\u5165\u98ce\u9669vuln.massage.PlaceholderStringSQLi=\u8bf7\u68c0\u67e5\u5360\u4f4d\u7b26\u5b57\u7b26\u4e32 SQL \u6ce8\u5165\u98ce\u9669vuln.massage.PolyadicExpressionSQLi=\u8bf7\u68c0\u67e5\u591a\u9879\u8868\u8fbe\u5f0f SQL \u6ce8\u5165\u98ce\u9669vuln.massage.SQLi=\u8bf7\u68c0\u67e5 SQL \u6ce8\u5165\u98ce\u9669vuln.massage.ApacheSSRF=\u8bf7\u68c0\u67e5 Apache SSRF \u98ce\u9669vuln.massage.GoogleIOSSRF=\u8bf7\u68c0\u67e5 Google IO SSRF \u98ce\u9669vuln.massage.JavaURLSSRF=\u8bf7\u68c0\u67e5 Java URL SSRF \u98ce\u9669vuln.massage.JsoupSSRF=\u8bf7\u68c0\u67e5 Jsoup SSRF \u98ce\u9669vuln.massage.OkhttpSSRF=\u8bf7\u68c0\u67e5 Okhttp SSRF \u98ce\u9669vuln.massage.SpringSSRF=\u8bf7\u68c0\u67e5 Spring SSRF \u98ce\u9669vuln.massage.URLConnectionSSRF=\u8bf7\u68c0\u67e5 URL \u5bfc\u81f4\u7684 SSRF \u98ce\u9669vuln.massage.BeetlSSTI=\u8bf7\u68c0\u67e5 Beetl \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.massage.FreemarkerSSTI=\u8bf7\u68c0\u67e5 Freemarker \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.massage.JinjavaSSTI=\u8bf7\u68c0\u67e5 Jinjava \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.massage.PebbleSSTI=\u8bf7\u68c0\u67e5 Pebble \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.massage.ThymeleafSSTI=\u8bf7\u68c0\u67e5 Thymeleaf \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.massage.ValidationSSTI=\u8bf7\u68c0\u67e5 Validation \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.massage.VelocitySSTI=\u8bf7\u68c0\u67e5 Velocity \u670d\u52a1\u5668\u7aef\u6a21\u677f\u6ce8\u5165 (SSTI) \u98ce\u9669vuln.massage.XXE=\u8bf7\u68c0\u67e5 XML \u5916\u90e8\u5b9e\u4f53 (XXE) \u98ce\u9669# ???????vuln.fix.NettyResponseSplittingRisk = \u5728 HttpServerCodec \u4e2d\u542f\u7528 validateHeaders \u5c5e\u6027vuln.fix.LDAPUnserialize = \u5728 LDAP \u8fde\u63a5\u4e2d\u5c06 returnObject \u53c2\u6570\u8bbe\u7f6e\u4e3a falsevuln.fix.OpenSAML2IgnoreComments = \u5c06 org.opensaml.xml.parse.ParserPool.ignoreComments \u5c5e\u6027\u8bbe\u7f6e\u4e3a truevuln.fix.FastjsonAutoType = \u79fb\u9664 Fastjson AutoType \u529f\u80fdvuln.fix.JacksonDatabindDefaultTypingAnnotation = \u4f7f\u7528 @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, property = "class") \u6ce8\u89e3vuln.fix.JacksonDatabindDefaultTypingDefault = \u4f7f\u7528 ObjectMapper.enableDefaultTyping() \u65b9\u6cd5vuln.fix.MybatisAnnotationSQLi = \u5728 Mybatis \u6ce8\u89e3\u4e2d\u4f7f\u7528 #{xxx} \u4ee3\u66ff ${xxx}vuln.fix.MybatisXmlSQLi = \u5728 Mybatis XML \u4e2d\u4f7f\u7528 #{xxx} \u4ee3\u66ff ${xxx}vuln.fix.XXE = \u7981\u7528 XML \u5916\u90e8\u5b9e\u4f53\u5904\u7406